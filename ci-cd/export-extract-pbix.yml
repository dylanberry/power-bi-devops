parameters:
  - name: PbixFileUrl
    type: string
    displayName: Pbix File Url
  - name: PbixFileFullPath
    type: string
    displayName: Pbix File Full Path
  - name: ServiceConnection
    type: string
    displayName: Service Connection
    default: Power Platform SharePoint

trigger: none

pool: default

steps:
- powershell: Get-ChildItem -Path '$(Build.BinariesDirectory)' -File -Recurse | Remove-Item -Force
- checkout: none

- task: AzureCLI@2
  inputs:
    azureSubscription: '${{ parameters.ServiceConnection }}'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Add-Type -AssemblyName System.Web

      # Input parameters
      $fileUrl = [System.Web.HttpUtility]::UrlDecode('${{ parameters.PbixFileUrl }}')
      $fullPath = '${{ parameters.PbixFileFullPath }}'

      echo  'Construct api url and file name'
      $siteUrl = [System.Web.HttpUtility]::UrlDecode($fileUrl).Replace($fullPath, '')
      $fileUri = [System.Uri]$fileUrl
      $relativePath = $fileUri.PathAndQuery
      $downloadUrl = "$($siteUrl)_api/web/GetFileByServerRelativeUrl('$relativePath')/`$value"
      $fileName = [System.Web.HttpUtility]::UrlDecode($fileUri.Segments[-1])

      $scope = "https://$($fileUri.Host)"
      echo "Obtaining token for scope $scope"
      $token = az account get-access-token --resource $scope | ConvertFrom-Json

      $headers = @{
          "Authorization" = "Bearer $($token.accessToken)";
      }
      
      $pbixDownloadPath = Join-Path '$(Build.BinariesDirectory)' -ChildPath $fileName

      echo "Downloading $downloadUrl to $pbixDownloadPath"
      Invoke-WebRequest -Uri $downloadUrl -Headers $headers -OutFile $pbixDownloadPath -Verbose

      $env:PBITOOLS_LogLevel = 'Verbose'
      echo "Extracting $pbixDownloadPath"
      C:\pbi-tools\pbi-tools.exe extract $pbixDownloadPath
  displayName: 'Download and Extract PBIX'

- publish: '$(Build.BinariesDirectory)'
  artifact: 'PBIX'