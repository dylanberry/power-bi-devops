parameters:
- name: EnvironmentName
  type: string
  displayName: Environment Name
- name: ApplicationName
  type: string
  displayName: Application Name
- name: DevOpsKeyVault
  type: string
  displayName: DevOps Key Vault
- name: DatasetName
  type: string
  displayName: Dataset Name
- name: ReportList
  type: object
  displayName: Report List
- name: BinaryReportSource
  displayName: Binary Report Source
  type: boolean
  default: true
- name: DevOpsKeyVaultServiceConnection
  type: string
  displayName: DevOps Key Vault Service Connection

jobs:
- deployment: Deploy_Reports
  displayName: Deploy Reports
  ${{ if or(contains(lower(parameters.EnvironmentName), 'dev'), contains(lower(parameters.EnvironmentName), 'test')) }}:
    environment: PBI-Dev-Generic
  ${{ else }}:
    environment: PBI-${{ parameters.EnvironmentName }}

  variables:
  - template: ../Common.variables.yml
  - name: ReportListJson
    value: ${{ convertToJson(parameters.ReportList) }}
  - name: WorkspaceName
    value: '${{ parameters.ApplicationName }} (${{ parameters.EnvironmentName }})'
  - name: ReportSourceFolderPath
    ${{ if parameters.BinaryReportSource }}:
      value: $(Build.ArtifactStagingDirectory)/extracted
    ${{ else }}:
      value: $(PBI-PowerBI.ReportSourceFolderPath)
  
  strategy:
    runOnce:
      deploy:

        steps:
        - checkout: self

        - task: AzureCLI@2
          displayName: 'Lookup Power BI SPN credentials from key vault'
          name: PbiCredentials
          inputs:
            azureSubscription: ${{ parameters.DevOpsKeyVaultServiceConnection }}
            scriptType: 'ps'
            scriptPath: '$(Common.PipelinesFolder)/util/Get-PowerBiDevOpsCredentials.ps1'
            arguments: '-KeyVaultName ''${{ parameters.DevOpsKeyVault }}'' -ApplicationName ''${{ parameters.ApplicationName }}'' -EnvironmentName ''${{ parameters.EnvironmentName }}'''
            scriptLocation: 'scriptPath'

        - powershell: choco install PowerBI -ignore-checksums
          displayName: Install PowerBI

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/util/Install-PbiTools.ps1'
            arguments: '-PbiToolsPath ''$(Common.PbiToolsPath)'''
            pwsh: true
            showWarnings: true
          displayName: Download and Install PBI Tools

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/export/Extract-PowerBIReports.ps1'
            arguments: '-PbiToolsPath ''$(Common.PbiToolsPath)'' -PbixFolderPath ''$(BI-PowerBI.ReportSourceFolderPath)'' -ReportSourceFolderPath ''$(ReportSourceFolderPath)'''
            pwsh: true
            showWarnings: true
          displayName: Extract binary PBIX files from source
          condition: ${{ parameters.BinaryReportSource }}

        - publish: '$(ReportSourceFolderPath)'
          artifact: 'Reports'
          displayName: Publish extracted PBIX files
          condition: ${{ parameters.BinaryReportSource }}

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/deploy/Config-Reports.ps1'
            arguments: '-TenantId ''$(TenantId)'' -ClientId ''$(ClientId)'' -ClientSecret ''$(ClientSecret)'' -WorkspaceName ''$(WorkspaceName)'' -DatasetName ''${{ parameters.DatasetName }}'' -ReportSourceFolderPath ''$(ReportSourceFolderPath)'' -ReportList $(''$(ReportListJson)'')'
            pwsh: true
            showWarnings: true
          displayName: Configure Reports

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/deploy/Compile-PowerBIReports.ps1'
            arguments: '-PbiToolsPath ''$(Common.PbiToolsPath)'' -ReportSourceFolderPath ''$(ReportSourceFolderPath)'' -pbixFolderPath ''$(Common.CompiledPbixFolderPath)'' -ReportList $(''$(ReportListJson)'')'
            pwsh: true
            showWarnings: true
          displayName: Compile PBIX Files

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/deploy/Import-PowerBIReports.ps1'
            arguments: '-TenantId ''$(TenantId)'' -ClientId ''$(ClientId)'' -ClientSecret ''$(ClientSecret)'' -WorkspaceName ''$(WorkspaceName)'' -PbixFolderPath ''$(Common.CompiledPbixFolderPath)'' -DatasetName ''${{ parameters.DatasetName }}'' -ReportList $(''$(ReportListJson)'')'
            pwsh: true
            showWarnings: true
          displayName: Import Reports to $(WorkspaceName)

        - task: PowerShell@2
          inputs:
            filePath: '$(Common.PipelinesFolder)/deploy/Update-ReportDatasetBindings.ps1'
            arguments: '-TenantId ''$(TenantId)'' -ClientId ''$(ClientId)'' -ClientSecret ''$(ClientSecret)'' -WorkspaceName ''$(WorkspaceName)'' -DatasetName ''${{ parameters.DatasetName }}'' -ReportList $(''$(ReportListJson)'')'
            pwsh: true
            showWarnings: true
          displayName: Rebind reports to dataset

        - publish: $(Common.CompiledPbixFolderPath)
          artifact: 'PBIX'
          condition: always()
          displayName: Publish compiled PBIX files