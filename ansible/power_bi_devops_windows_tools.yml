---
- hosts: azurevms
  gather_facts: no
  tasks:
  - name: Install chocolatey
    win_chocolatey:
      name:
      - chocolatey
      - chocolatey-core.extension
      state: present

  - name: Install Power BI
    win_chocolatey:
      name: PowerBI
      state: present
      ignore_checksums: yes

  - name: Install Azure Pipelines Agent
    win_chocolatey:
      name: azure-pipelines-agent
      state: present
        
  - name: Configure Azure Pipelines Agent
    ansible.windows.win_powershell:
      script: |
        [CmdletBinding()]
        param (
          [string]$AgentInstallPath,
          [string]$AgentName,
          [string]$PoolName,
          [string]$AzdoUri,
          [string]$AzdoPat,
          [string]$RunAsAutoLogon,
          [string]$WindowsLogonAccount,
          [string]$WindowsLogonPassword,
          [string]$WorkDirectory
        )

        if (-not $AgentInstallPath) {
          $AgentInstallPath = 'C:\agent'
        }

        $AgentName = $env:ComputerName

        try {
          Push-Location -Path $AgentInstallPath
          
          Remove-Item "$AgentInstallPath\_diag\*" -Recurse -Force -ErrorAction SilentlyContinue

          $agentConfigCmd = "cmd.exe /C .\config.cmd --unattended --url '$AzdoUri' --auth 'pat' --token '$AzdoPat' --pool '$PoolName' --agent '$AgentName' --runAsService --windowsLogonAccount '$WindowsLogonAccount' --windowsLogonPassword '$WindowsLogonPassword'"
          Invoke-Expression -Command $agentConfigCmd
        } finally {
          Pop-Location
        }
      parameters:
        PoolName: '{{ PoolName }}'
        AzdoUri: '{{ AzdoUri }}'
        AzdoPat: '{{ AzdoPat }}'
        WindowsLogonAccount: '{{ WindowsLogonAccount }}'
        WindowsLogonPassword: '{{ WindowsLogonPassword }}'
    register: pwsh_output
        
  - name: Output Azure Pipelines Agent Configuration Log
    ansible.windows.win_powershell:
      script: |
        $logFiles = Get-ChildItem "C:\agent\_diag\*.log"
        echo ($logFiles).FullName
    register: log_path
        
  - name: Fetch Log File
    ansible.builtin.fetch:
      src: "{{ log_path.output[0] }}"
      dest: "{{ inventory_hostname }}.log"
      flat: yes
    when: log_path.output[0] != None