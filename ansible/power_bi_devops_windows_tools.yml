---
- hosts: azurevms
  gather_facts: no
  tasks:
  - name: Install chocolatey
    win_chocolatey:
      name:
      - chocolatey
      - chocolatey-core.extension
      state: present

  - name: Install Power BI
    win_chocolatey:
      name: PowerBI
      state: present
      ignore_checksums: yes

  - name: Install Azure Pipelines Agent
    win_chocolatey:
      name: azure-pipelines-agent
      state: present
        
  - name: Configure Azure Pipelines Agent
    ansible.windows.win_powershell:
      script: |
        [CmdletBinding()]
        param (
          [string]$AgentInstallPath,
          [string]$AgentName,
          [string]$PoolName,
          [string]$AzdoUri,
          [string]$AzdoPat,
          [string]$RunAsAutoLogon,
          [string]$WindowsLogonAccount,
          [string]$WindowsLogonPassword,
          [string]$WorkDirectory
        )

        if (-not $AgentInstallPath) {
          $AgentInstallPath = 'C:\agent'
        }

        $AgentName = $env:ComputerName
        $RunAsAutoLogon = $False

        try {
          # Set the current directory to the agent dedicated one previously created.
          Push-Location -Path $AgentInstallPath

          Remove-Item "$AgentInstallPath\_diag\*" -Recurse -Force

          $agentConfigArgs = "--unattended", "--url", $AzdoUri, "--auth", "PAT", "--token", $AzdoPat, "--pool", $PoolName, "--agent", $AgentName, "--windowslogonaccount", $WindowsLogonAccount, "--windowslogonpassword", $WindowsLogonPassword
          if ($RunAsAutoLogon) {
              # Configure agent to run with autologon enabled
              #Set-MachineForAutologon -Config $Config
              $agentConfigArgs += "--overwriteAutoLogon", "--runAsAutoLogon"
          } else {
              # Configure agent to run as a service
              $agentConfigArgs += "--runasservice"
          }
          
          $agentConfigPath = Join-Path $AgentInstallPath -ChildPath 'config.cmd'
          & $agentConfigPath $agentConfigArgs
          
          #$agentRunPath = Join-Path $Config.AgentInstallPath -ChildPath 'run.cmd'
          #& $agentRunPath
        } finally {
          Pop-Location
        }
      parameters:
        PoolName: '{{ PoolName }}'
        AzdoUri: '{{ AzdoUri }}'
        AzdoPat: '{{ AzdoPat }}'
        WindowsLogonAccount: '{{ WindowsLogonAccount }}'
        WindowsLogonPassword: '{{ WindowsLogonPassword }}'
    register: pwsh_output

  - name: Print pwsh_output
    debug:
      msg: "{{ pwsh_output }}"
        
  - name: Output Azure Pipelines Agent Configuration Log
    ansible.windows.win_powershell:
      script: |
        $logFiles = Get-ChildItem "C:\agent\_diag\*.log"
        echo ($logFiles).FullName
    register: log_path

  - name: Print log_path.output[0]
    debug:
      msg: "{{ log_path.output[0] }}"
        
  - name: Fetch Log File
    ansible.builtin.fetch:
      src: "{{ log_path.output[0] }}"
      dest: "{{ inventory_hostname }}"
      flat: yes